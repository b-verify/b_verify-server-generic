syntax = "proto3";

package serialization.generated;
import "protos/mpt.proto";
option java_outer_classname = "BVerifyAPIMessageSerialization";


/**
* OVERALL NOTES:
*	-  	we use protobuf for efficient serialization of proofs
*
*/

/**
*	Signed statement to create a new log.
*	Includes the log creation statement 
* 	and the required signatures.
*/
message SignedCreateLogStatement {
	CreateLogStatement create_log_statement = 1;
	bytes signature = 2;
}


/**
*	Statement to create a new log.
*	Requires the public keys which must sign any 
*	log statements and an initial statement (e.g. a name)
*	for the log.
*
*	ID for the new log is
*			 logID = H(CreateLogStatement)
*/
message CreateLogStatement {
	bytes controlling_public_key = 1;
	bytes initial_statement = 2;
}

/**
*	Log Statement.
*/
message LogStatement { 
	bytes log_id = 1;
	bytes statment = 2;
}

/**
*	Signed Log Statement.
*/
message SignedLogStatement {
	LogStatement statement = 1;
	bytes signature = 2;
}

/**
* 	Proof For A Log.
*/
message LogProof {
	bytes log_id = 1;
	SignedCreateLogStatement create_log_statement = 2;
 	repeated SignedLogStatement signed_statements = 3;
	repeated MerklePrefixTrie proof_of_statements = 4;
}




